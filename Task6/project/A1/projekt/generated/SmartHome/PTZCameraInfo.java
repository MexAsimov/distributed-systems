//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.7
//
// <auto-generated>
//
// Generated from file `SmartHome.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package SmartHome;

public class PTZCameraInfo implements java.lang.Cloneable,
                                      java.io.Serializable
{
    public State state;

    public State nightVisionState;

    public CameraPosition position;

    public PTZCameraInfo()
    {
        this.state = State.ON;
        this.nightVisionState = State.ON;
        this.position = new CameraPosition();
    }

    public PTZCameraInfo(State state, State nightVisionState, CameraPosition position)
    {
        this.state = state;
        this.nightVisionState = nightVisionState;
        this.position = position;
    }

    public boolean equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        PTZCameraInfo r = null;
        if(rhs instanceof PTZCameraInfo)
        {
            r = (PTZCameraInfo)rhs;
        }

        if(r != null)
        {
            if(this.state != r.state)
            {
                if(this.state == null || r.state == null || !this.state.equals(r.state))
                {
                    return false;
                }
            }
            if(this.nightVisionState != r.nightVisionState)
            {
                if(this.nightVisionState == null || r.nightVisionState == null || !this.nightVisionState.equals(r.nightVisionState))
                {
                    return false;
                }
            }
            if(this.position != r.position)
            {
                if(this.position == null || r.position == null || !this.position.equals(r.position))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int hashCode()
    {
        int h_ = 5381;
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, "::SmartHome::PTZCameraInfo");
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, state);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, nightVisionState);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, position);
        return h_;
    }

    public PTZCameraInfo clone()
    {
        PTZCameraInfo c = null;
        try
        {
            c = (PTZCameraInfo)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void ice_writeMembers(com.zeroc.Ice.OutputStream ostr)
    {
        State.ice_write(ostr, this.state);
        State.ice_write(ostr, this.nightVisionState);
        CameraPosition.ice_write(ostr, this.position);
    }

    public void ice_readMembers(com.zeroc.Ice.InputStream istr)
    {
        this.state = State.ice_read(istr);
        this.nightVisionState = State.ice_read(istr);
        this.position = CameraPosition.ice_read(istr);
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, PTZCameraInfo v)
    {
        if(v == null)
        {
            _nullMarshalValue.ice_writeMembers(ostr);
        }
        else
        {
            v.ice_writeMembers(ostr);
        }
    }

    static public PTZCameraInfo ice_read(com.zeroc.Ice.InputStream istr)
    {
        PTZCameraInfo v = new PTZCameraInfo();
        v.ice_readMembers(istr);
        return v;
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, java.util.Optional<PTZCameraInfo> v)
    {
        if(v != null && v.isPresent())
        {
            ice_write(ostr, tag, v.get());
        }
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, PTZCameraInfo v)
    {
        if(ostr.writeOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            int pos = ostr.startSize();
            ice_write(ostr, v);
            ostr.endSize(pos);
        }
    }

    static public java.util.Optional<PTZCameraInfo> ice_read(com.zeroc.Ice.InputStream istr, int tag)
    {
        if(istr.readOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            istr.skip(4);
            return java.util.Optional.of(PTZCameraInfo.ice_read(istr));
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    private static final PTZCameraInfo _nullMarshalValue = new PTZCameraInfo();

    /** @hidden */
    public static final long serialVersionUID = -695453614L;
}
